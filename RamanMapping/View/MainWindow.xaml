<Window x:Class="RamanMapping.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:RamanMapping"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:zoom="clr-namespace:RamanMapping.ViewModel"
        mc:Ignorable="d"
        Title="RamanMapping" Height="450" Width="880">

    <Window.Resources>
        <Style x:Key="CBStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="Content" Value="Enable"/>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Content" Value="Disable">
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <zoom:MultiBoolAndConverter x:Key="MultBoolAndConv"/>
        <zoom:PointStringConverter x:Key="PointStringConv"/>
        <zoom:BoolVisibilityConverter x:Key="BoolVisibilityConv"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <Grid x:Name="iMeasurementVM" DataContext="{Binding MeasurementVM}">
                <ToolBarTray>
                    <ToolBar ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded">
                        <Button ToolTip="Calibrate Reference Laser Spot" Style="{StaticResource ToolbarButton}" Command="{Binding CommandCalibrateRefPoint}">
                            <Image Source="..\Images\calibrate_ref.png" Width="32"/>
                        </Button>
                        <Button ToolTip="Calibrate Pixels in MM" Style="{StaticResource ToolbarButton}" Command="{Binding CommandCalibrate}">
                            <Image Source="..\Images\calibrate.png"/>
                            <Button.IsEnabled>
                                <MultiBinding Converter="{StaticResource MultBoolAndConv}">
                                    <Binding ElementName="cbXEnable" Path="IsChecked"/>
                                    <Binding ElementName="cbYEnable" Path="IsChecked"/>
                                </MultiBinding>
                            </Button.IsEnabled>
                        </Button>
                    </ToolBar>
                    <ToolBar ToolBarTray.IsLocked="True">
                        <Button ToolTip="Measure" Style="{StaticResource ToolbarButton}" Command="{Binding CommandMeasure}">
                            <Image Source="..\Images\fluorescence.png" Width="32"/>
                        </Button>
                        <Button ToolTip="Batch Measurement" Style="{StaticResource ToolbarButton}" Command="{Binding CommandBatchMeasure}">
                            <Image Source="..\Images\Batch_Process.png" Width="32"/>
                        </Button>
                        <Button ToolTip="Mapping Measurement" Style="{StaticResource ToolbarButton}" Command="{Binding CommandMappingMeasure}">
                            <Image Source="..\Images\mapping.png" Width="32"/>
                        </Button>
                    </ToolBar>
                    <ToolBar ToolBarTray.IsLocked="True">
                        <Button ToolTip="Show Selected Points" Command="{Binding CommandDisplayMarkedPoints}">
                            <Image Source="..\Images\mask.png" Width="32"/>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ShowMarkedPoints}" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </ToolBar>
                    <ToolBar ToolBarTray.IsLocked="True">
                        <Button ToolTip="Turn on Laser" Command="{Binding CommandToggleLaser}">
                            <Image Source="..\Images\laser.png" Width="32"/>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LaserOn}" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button ToolTip="Turn on LED" Command="{Binding CommandToggleLED}">
                            <Image Source="..\Images\led.png" Width="32"/>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding LedOn}" Value="True">
                                            <Setter Property="Background" Value="LightBlue"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </ToolBar>
                </ToolBarTray>
                <ToolBarTray HorizontalAlignment="Right" VerticalAlignment="Center">
                    <ToolBar ToolBarTray.IsLocked="True" Loaded="ToolBar_Loaded">
                        <Button ToolTip="Camera Settings" Style="{StaticResource ToolbarButton}"
                                Command="{Binding CommandCameraSettings}" IsEnabled="{Binding ElementName=iCameraVM, Path=DataContext.Connected}">
                            <Image Source="..\Images\camerasettings.png" Height="32" Width="32"/>
                        </Button>
                        <Button ToolTip="Motor Settings" Style="{StaticResource ToolbarButton}"
                                Command="{Binding CommandMotorSettings}" IsEnabled="{Binding ElementName=iXYZMotorVM, Path=DataContext.Connected}">
                            <Image Source="..\Images\motor.png" Height="32" Width="32"/>
                        </Button>
                        <Button ToolTip="Spectrum Settings" Style="{StaticResource ToolbarButton}" Command="{Binding CommandSpectrumSettings}">
                            <Image Source="..\Images\spectrometer.png" Height="32" Width="32"/>
                        </Button>
                    </ToolBar>
                </ToolBarTray>
            </Grid>
        </StackPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid x:Name="iCameraVM" Grid.Row="0" DataContext="{Binding CameraVM}">
                <zoom:ZoomBorder x:Name="borderInstance" ClipToBounds="True" Background="Gray">
                    <Image x:Name="iImage" Source="{Binding CameraImage}" VerticalAlignment="Center" Stretch="Uniform"/>
                </zoom:ZoomBorder>
                <Viewbox Stretch="Fill" Width="{Binding ElementName=iImage, Path=ActualWidth}" Height="{Binding ElementName=iImage, Path=ActualHeight}">
                    <Canvas Background="Transparent"  x:Name="CanvasDraw" IsHitTestVisible="False" Visibility="{Binding ElementName=iMeasurementVM, Path=DataContext.ShowMarkedPoints, Converter={StaticResource BoolVisibilityConv}}"
                            Width="{Binding Path=Width}" 
                            Height="{Binding Path=Height}">
                    </Canvas>
                </Viewbox>
            </Grid>
            <Grid x:Name="iXYZMotorVM" Grid.Row="1" DataContext="{Binding XYZMotorVM}" Margin="20, 10, 20, 10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="2*"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">
                            <RadioButton Content="Start" GroupName="PositionSelection" IsChecked="{Binding StartPointChecked}" />
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0">
                            <TextBox IsReadOnly="True" BorderThickness="1" Text="{Binding StartPoint, Converter={StaticResource PointStringConv}}"/>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="2" Width="60" VerticalAlignment="Center" Margin="5,0,0,0">
                            <Button Command="{Binding CommandMoveTo}" Content="Move To">
                                <Button.IsEnabled>
                                    <MultiBinding Converter="{StaticResource MultBoolAndConv}">
                                        <Binding Path="XEnabled"/>
                                        <Binding Path="YEnabled"/>
                                    </MultiBinding>
                                </Button.IsEnabled>
                            </Button>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="2" Width="60" VerticalAlignment="Center" Margin="5,0,0,0">
                            <Button Width="60" Command="{Binding CommandStop}" Content="Stop"></Button>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="0">
                            <TextBlock VerticalAlignment="Center">Points:</TextBlock>
                        </StackPanel>
                        <Grid Grid.Row="2" Grid.Column="1" Margin="5,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" IsReadOnly="True" BorderThickness="1" VerticalAlignment="Center" Text="{Binding PositionCount, Mode=OneWay}"></TextBox>
                            <Button Visibility="Collapsed" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5,0,0,0" Command="{Binding CommandAddNewPoint}" CommandParameter="{Binding StartPoint}">
                                <TextBlock Text="+" Margin="0,-4,0,0" FontWeight="Bold" FontSize="16"/>
                            </Button>
                            <Button Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5,0,0,0" Command="{Binding CommandRemoveLastPoint}">
                                <TextBlock Text="-" Margin="0,-4,0,0" FontWeight="Bold" FontSize="16"/>
                            </Button>
                        </Grid>
                        <StackPanel Grid.Row="2" Grid.Column="2" Width="60" VerticalAlignment="Center" Margin="5,0,0,0">
                            <Button Width="60" Command="{Binding CommandHoming}" Content="Homing"></Button>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">
                            <RadioButton Content="End" GroupName="PositionSelection" IsChecked="{Binding EndPointChecked}"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="5,0,0,0">
                            <TextBox IsReadOnly="True" BorderThickness="1" Text="{Binding EndPoint, Converter={StaticResource PointStringConv}}"/>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="2" Width="60" VerticalAlignment="Center" Margin="5,0,0,0">
                            <Button Width="60" Command="{Binding CommandStop}" Content="Stop"></Button>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="1" Width="1" Margin="10,10,10,10" Background="#FFAEA9A9"/>
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <DockPanel Grid.Row="0" Grid.Column="0" VerticalAlignment="center">
                            <Label Margin="0,0,5,0" DockPanel.Dock="Left">X:</Label>
                            <CheckBox x:Name="cbXEnable" Width="60" DockPanel.Dock="Left" Style="{StaticResource CBStyle}" VerticalAlignment="center" IsChecked="{Binding XEnabled}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked" >
                                        <i:InvokeCommandAction Command="{Binding CommandEnableAxis}" CommandParameter="0"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="UnChecked" >
                                        <i:InvokeCommandAction Command="{Binding CommandDisableAxis}" CommandParameter="0"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <Ellipse Margin="10,0,0,0" Width="15" Height="15" DockPanel.Dock="Left">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=XMoving}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15" DockPanel.Dock="Right">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=XInPosition}" Value="True">
                                                <Setter Property="Fill" Value="Green" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <Label Margin="5,0" DockPanel.Dock="Right">INPOS</Label>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="2" Margin="10,0,0,0" Grid.RowSpan="2">RPOS:</Label>
                                <TextBox Grid.Column="3" Margin="0,0,0,0" IsReadOnly="True" BorderThickness="1" Text="{Binding XRPosition}" VerticalContentAlignment="Center" Grid.RowSpan="2"/>
                            </Grid>
                        </DockPanel>
                        <DockPanel Grid.Row="1" Grid.Column="0" VerticalAlignment="center">
                            <Label Margin="0,0,5,0" DockPanel.Dock="Left">Y:</Label>
                            <CheckBox x:Name="cbYEnable" Width="60" DockPanel.Dock="Left" Style="{StaticResource CBStyle}" VerticalAlignment="center" IsChecked="{Binding YEnabled}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked" >
                                        <i:InvokeCommandAction Command="{Binding CommandEnableAxis}" CommandParameter="1"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="UnChecked" >
                                        <i:InvokeCommandAction Command="{Binding CommandDisableAxis}" CommandParameter="1"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <Ellipse Margin="10,0,0,0" Width="15" Height="15" DockPanel.Dock="Left">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=YMoving}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15" DockPanel.Dock="Right">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=YInPosition}" Value="True">
                                                <Setter Property="Fill" Value="Green" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <Label Margin="5,0" DockPanel.Dock="Right">INPOS</Label>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="2" Margin="10,0,0,0">RPOS:</Label>
                                <TextBox Grid.Column="3" Margin="0,0,0,0" IsReadOnly="True" BorderThickness="1" Text="{Binding YRPosition}" VerticalContentAlignment="Center"/>
                            </Grid>
                        </DockPanel>
                        <DockPanel Grid.Row="2" Grid.Column="0" VerticalAlignment="center">
                            <Label Margin="0,0,5,0" DockPanel.Dock="Left">Z:</Label>
                            <CheckBox Width="60" DockPanel.Dock="Left" Style="{StaticResource CBStyle}" VerticalAlignment="center" IsChecked="{Binding ZEnabled, Mode=TwoWay}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Checked" >
                                        <i:InvokeCommandAction Command="{Binding CommandEnableAxis}" CommandParameter="2"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="UnChecked" >
                                        <i:InvokeCommandAction Command="{Binding CommandDisableAxis}" CommandParameter="2"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                            <Ellipse Margin="10,0,0,0" Width="15" Height="15" DockPanel.Dock="Left">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ZMoving}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15" DockPanel.Dock="Right">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ZInPosition}" Value="True">
                                                <Setter Property="Fill" Value="Green" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <Label Margin="5,0" DockPanel.Dock="Right">INPOS</Label>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="auto"></ColumnDefinition>
                                    <ColumnDefinition Width="14*"></ColumnDefinition>
                                    <ColumnDefinition Width="27*"/>
                                </Grid.ColumnDefinitions>
                                <Label Grid.Column="2" Margin="10,0,0,0">RPOS:</Label>
                                <TextBox Grid.Column="3" Margin="0,0,0,0" IsReadOnly="True" BorderThickness="1" Text="{Binding ZRPosition}" VerticalContentAlignment="Center" Grid.ColumnSpan="2"/>
                            </Grid>
                        </DockPanel>
                    </Grid>
                    <Grid Grid.Column="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Row="0" Grid.Column="0" Orientation="Horizontal" Margin="10,0">
                            <TextBlock Text="LL: " VerticalAlignment="Center"/>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=XLimitL}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </StackPanel>
                        <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" Margin="0,0">
                            <TextBlock Text="LR: " VerticalAlignment="Center"/>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=XLimitR}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="10,0">
                            <TextBlock Text="LL: " VerticalAlignment="Center"/>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=YLimitL}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </StackPanel>
                        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="0,0">
                            <TextBlock Text="LR: " VerticalAlignment="Center"/>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=YLimitR}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" Margin="10,0">
                            <TextBlock Text="LL: " VerticalAlignment="Center"/>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ZLimitL}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </StackPanel>
                        <StackPanel Grid.Row="2" Grid.Column="1" Orientation="Horizontal" Margin="0,0">
                            <TextBlock Text="LR: " VerticalAlignment="Center"/>
                            <Ellipse Margin="0,0,0,0" Width="15" Height="15">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="LightGray"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ZLimitR}" Value="True">
                                                <Setter Property="Fill" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="4" Width="1" Margin="10,10,10,10" Background="#FFAEA9A9"/>
                    <Grid Grid.Column="5">
                        <StackPanel HorizontalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <Button Visibility="Hidden">
                                    <Image Source="..\Images\logo_up.png"/>
                                </Button>
                                <Button ToolTip="Move up" IsEnabled="{Binding YEnabled}">
                                    <Image Source="..\Images\logo_up.png"/>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding JogY}" CommandParameter="1"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseUp" >
                                            <i:InvokeCommandAction Command="{Binding JogStop}" CommandParameter="1"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Visibility="Hidden">
                                    <Image Source="..\Images\logo_up.png"/>
                                </Button>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button ToolTip="Move left" IsEnabled="{Binding XEnabled}">
                                    <Image Source="..\Images\logo_left.png"/>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding JogX}" CommandParameter="-1"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseUp" >
                                            <i:InvokeCommandAction Command="{Binding JogStop}" CommandParameter="0"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Visibility="Hidden">
                                    <Image Source="..\Images\logo_up.png"/>
                                </Button>
                                <Button ToolTip="Move right" IsEnabled="{Binding XEnabled}">
                                    <Image Source="..\Images\logo_right.png"/>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding JogX}" CommandParameter="1"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseUp" >
                                            <i:InvokeCommandAction Command="{Binding JogStop}" CommandParameter="0"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <Button Visibility="Hidden">
                                    <Image Source="..\Images\logo_up.png"/>
                                </Button>
                                <Button ToolTip="Move down" IsEnabled="{Binding YEnabled}">
                                    <Image Source="..\Images\logo_down.png"/>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseDown" >
                                            <i:InvokeCommandAction Command="{Binding JogY}" CommandParameter="-1"/>
                                        </i:EventTrigger>
                                        <i:EventTrigger EventName="PreviewMouseUp" >
                                            <i:InvokeCommandAction Command="{Binding JogStop}" CommandParameter="1"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </Button>
                                <Button Visibility="Hidden">
                                    <Image Source="..\Images\logo_up.png"/>
                                </Button>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="6">
                        <StackPanel Margin="10,0" VerticalAlignment="center">
                            <Button ToolTip="Move Z Up" IsEnabled="{Binding ZEnabled}" Margin="0,0,0,5">
                                <Image Source="..\Images\logo_up.png"/>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding JogZ}" CommandParameter="1"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseUp" >
                                        <i:InvokeCommandAction Command="{Binding JogStop}" CommandParameter="2"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                            <Button ToolTip="Move Z Down" IsEnabled="{Binding ZEnabled}" Margin="0,5,0,0">
                                <Image Source="..\Images\logo_down.png"/>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseDown" >
                                        <i:InvokeCommandAction Command="{Binding JogZ}" CommandParameter="-1"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="PreviewMouseUp" >
                                        <i:InvokeCommandAction Command="{Binding JogStop}" CommandParameter="2"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Column="7" Width="1" Margin="0,10,10,10" Background="#FFAEA9A9"/>
                    <StackPanel Grid.Column="8" VerticalAlignment="Center">
                        <TextBlock Margin="0,0,0,10" HorizontalAlignment="Center" VerticalAlignment="Center">LASER</TextBlock>
                        <Ellipse Margin="0,0,0,0" Width="15" Height="15">
                            <Ellipse.Style>
                                <Style TargetType="Ellipse">
                                    <Setter Property="Fill" Value="LightGray"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=LaserStateON}" Value="True">
                                            <Setter Property="Fill" Value="Red" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Ellipse.Style>
                        </Ellipse>
                        <Button Width="60" Command="{Binding CommandSaveRefPosition}" Content="Save Ref" Margin="0, 10, 0, 0"></Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
        <StatusBar x:Name="iStatusVM" Grid.Row="2" DataContext="{Binding StatusVM}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Camera:</TextBlock>
                    <TextBlock Margin="5,0,5,0" Text="{Binding CamCurrentMessage}"></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock>Motor:</TextBlock>
                    <TextBlock Margin="5,0,5,0" Text="{Binding MotoCurrentMessage}"></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="2">
                <StackPanel Orientation="Horizontal">
                    <TextBlock>SpectroMeter:</TextBlock>
                    <TextBlock Margin="5,0,5,0" Text="{Binding SpecCurrentMessage}"></TextBlock>
                </StackPanel>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3" HorizontalAlignment="Stretch">
                <ProgressBar x:Name="pbStatus" Minimum="0" Maximum="100" HorizontalAlignment="Stretch" VerticalAlignment="Center" 
                                 Value="{Binding CurrentProgress}" Width="100" Height="20"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
